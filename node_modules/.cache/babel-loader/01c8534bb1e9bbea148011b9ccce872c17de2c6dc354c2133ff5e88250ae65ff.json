{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chait\\\\OneDrive\\\\Desktop\\\\cfunding\\\\crowd_funding_platform_frontend\\\\src\\\\Components\\\\navbar_Landing.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Navbar from \"./navbar\";\nimport styles from \"./styles/navbar.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NavBar = () => {\n  _s();\n  const [navBackground, setNavBackground] = useState(styles.notscrolled);\n  useEffect(() => {\n    const changeColor = () => {\n      var scrolled = window.scrollY;\n      if (scrolled >= 80) {\n        if (navBackground !== styles.scrolled) {\n          setNavBackground(styles.scrolled);\n        }\n      } else {\n        if (navBackground !== styles.notscrolled) {\n          setNavBackground(styles.notscrolled);\n        }\n      }\n      return null;\n    };\n    window.addEventListener(\"scroll\", changeColor);\n    return () => {\n      window.removeEventListener(\"scroll\", changeColor);\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Navbar, {\n      navBackground: navBackground\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(NavBar, \"+sZp7w4KBNSHKcWe0mS9VvVHhBQ=\");\n_c = NavBar;\nexport default NavBar;\nvar _c;\n$RefreshReg$(_c, \"NavBar\");","map":{"version":3,"names":["React","useEffect","useState","Navbar","styles","jsxDEV","_jsxDEV","NavBar","_s","navBackground","setNavBackground","notscrolled","changeColor","scrolled","window","scrollY","addEventListener","removeEventListener","Fragment","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/chait/OneDrive/Desktop/cfunding/crowd_funding_platform_frontend/src/Components/navbar_Landing.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Navbar from \"./navbar\";\r\nimport styles from \"./styles/navbar.module.css\";\r\n\r\nconst NavBar = () => {\r\n  const [navBackground, setNavBackground] = useState(styles.notscrolled);\r\n\r\n  useEffect(() => {\r\n    const changeColor = () => {\r\n      var scrolled = window.scrollY;\r\n      if (scrolled >= 80) {\r\n        if (navBackground !== styles.scrolled) {\r\n          setNavBackground(styles.scrolled);\r\n        }\r\n      } else {\r\n        if (navBackground !== styles.notscrolled) {\r\n          setNavBackground(styles.notscrolled);\r\n        }\r\n      }\r\n      return null;\r\n    };\r\n\r\n    window.addEventListener(\"scroll\", changeColor);\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", changeColor);\r\n    };\r\n  });\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Navbar navBackground={navBackground} />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,MAAM,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGR,QAAQ,CAACE,MAAM,CAACO,WAAW,CAAC;EAEtEV,SAAS,CAAC,MAAM;IACd,MAAMW,WAAW,GAAGA,CAAA,KAAM;MACxB,IAAIC,QAAQ,GAAGC,MAAM,CAACC,OAAO;MAC7B,IAAIF,QAAQ,IAAI,EAAE,EAAE;QAClB,IAAIJ,aAAa,KAAKL,MAAM,CAACS,QAAQ,EAAE;UACrCH,gBAAgB,CAACN,MAAM,CAACS,QAAQ,CAAC;QACnC;MACF,CAAC,MAAM;QACL,IAAIJ,aAAa,KAAKL,MAAM,CAACO,WAAW,EAAE;UACxCD,gBAAgB,CAACN,MAAM,CAACO,WAAW,CAAC;QACtC;MACF;MACA,OAAO,IAAI;IACb,CAAC;IAEDG,MAAM,CAACE,gBAAgB,CAAC,QAAQ,EAAEJ,WAAW,CAAC;IAC9C,OAAO,MAAM;MACXE,MAAM,CAACG,mBAAmB,CAAC,QAAQ,EAAEL,WAAW,CAAC;IACnD,CAAC;EACH,CAAC,CAAC;EAEF,oBACEN,OAAA,CAACN,KAAK,CAACkB,QAAQ;IAAAC,QAAA,eACbb,OAAA,CAACH,MAAM;MAACM,aAAa,EAAEA;IAAc;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1B,CAAC;AAErB,CAAC;AAACf,EAAA,CA7BID,MAAM;AAAAiB,EAAA,GAANjB,MAAM;AA+BZ,eAAeA,MAAM;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}